// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
using System;
using Bicep.Core;
using Bicep.Core.Resources;
using Bicep.Core.TypeSystem;
namespace Bicep.Resources.Types
{
    [ResourceTypeRegisterableAttribute]
    public class Microsoft_Sql_2018_06_01_preview
    {
        private const string ProviderNamespace = "Microsoft.Sql";
        private const string ApiVersion = "2018-06-01-preview";
        private static readonly ResourceTypeReference ResourceTypeReference_instancePools = new ResourceTypeReference(ProviderNamespace, new[]{"instancePools"}, ApiVersion);
        private static readonly ResourceTypeReference ResourceTypeReference_managedInstances_vulnerabilityAssessments = new ResourceTypeReference(ProviderNamespace, new[]{"managedInstances", "vulnerabilityAssessments"}, ApiVersion);
        private static readonly ResourceTypeReference ResourceTypeReference_servers_vulnerabilityAssessments = new ResourceTypeReference(ProviderNamespace, new[]{"servers", "vulnerabilityAssessments"}, ApiVersion);
        private static readonly ResourceTypeReference ResourceTypeReference_servers_privateEndpointConnections = new ResourceTypeReference(ProviderNamespace, new[]{"servers", "privateEndpointConnections"}, ApiVersion);
        private static readonly ResourceTypeReference ResourceTypeReference_managedInstances_databases_backupLongTermRetentionPolicies = new ResourceTypeReference(ProviderNamespace, new[]{"managedInstances", "databases", "backupLongTermRetentionPolicies"}, ApiVersion);
        private static readonly ResourceTypeReference ResourceTypeReference_managedInstances_databases_schemas_tables_columns_sensitivityLabels = new ResourceTypeReference(ProviderNamespace, new[]{"managedInstances", "databases", "schemas", "tables", "columns", "sensitivityLabels"}, ApiVersion);
        private static Lazy<Microsoft_Sql_2018_06_01_preview> InstanceLazy = new Lazy<Microsoft_Sql_2018_06_01_preview>(() => new Microsoft_Sql_2018_06_01_preview());
        private Microsoft_Sql_2018_06_01_preview()
        {
            ManagedInstanceVulnerabilityAssessmentProperties = new NamedObjectType("ManagedInstanceVulnerabilityAssessmentProperties", new ITypeProperty[]{new TypeProperty("storageContainerPath", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("storageContainerSasKey", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("storageAccountAccessKey", LanguageConstants.String, TypePropertyFlags.None), new LazyTypeProperty("recurringScans", () => VulnerabilityAssessmentRecurringScansProperties, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            VulnerabilityAssessmentRecurringScansProperties = new NamedObjectType("VulnerabilityAssessmentRecurringScansProperties", new ITypeProperty[]{new TypeProperty("isEnabled", LanguageConstants.Bool, TypePropertyFlags.None), new TypeProperty("emailSubscriptionAdmins", LanguageConstants.Bool, TypePropertyFlags.None), new TypeProperty("emails", LanguageConstants.Array, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            ServerVulnerabilityAssessmentProperties = new NamedObjectType("ServerVulnerabilityAssessmentProperties", new ITypeProperty[]{new TypeProperty("storageContainerPath", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("storageContainerSasKey", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("storageAccountAccessKey", LanguageConstants.String, TypePropertyFlags.None), new LazyTypeProperty("recurringScans", () => VulnerabilityAssessmentRecurringScansProperties, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            SensitivityLabelProperties = new NamedObjectType("SensitivityLabelProperties", new ITypeProperty[]{new TypeProperty("labelName", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("labelId", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("informationType", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("informationTypeId", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("rank", LanguageConstants.String, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            Sku = new NamedObjectType("Sku", new ITypeProperty[]{new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("tier", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("size", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("family", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("capacity", LanguageConstants.Int, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            InstancePoolProperties = new NamedObjectType("InstancePoolProperties", new ITypeProperty[]{new TypeProperty("subnetId", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("vCores", LanguageConstants.Int, TypePropertyFlags.Required), new TypeProperty("licenseType", LanguageConstants.String, TypePropertyFlags.Required)}, null, TypePropertyFlags.None);
            PrivateEndpointConnectionProperties = new NamedObjectType("PrivateEndpointConnectionProperties", new ITypeProperty[]{new LazyTypeProperty("privateEndpoint", () => PrivateEndpointProperty, TypePropertyFlags.None), new LazyTypeProperty("privateLinkServiceConnectionState", () => PrivateLinkServiceConnectionStateProperty, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            PrivateEndpointProperty = new NamedObjectType("PrivateEndpointProperty", new ITypeProperty[]{new TypeProperty("id", LanguageConstants.String, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            PrivateLinkServiceConnectionStateProperty = new NamedObjectType("PrivateLinkServiceConnectionStateProperty", new ITypeProperty[]{new TypeProperty("status", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("description", LanguageConstants.String, TypePropertyFlags.Required)}, null, TypePropertyFlags.None);
            BaseLongTermRetentionPolicyProperties = new NamedObjectType("BaseLongTermRetentionPolicyProperties", new ITypeProperty[]{new TypeProperty("weeklyRetention", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("monthlyRetention", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("yearlyRetention", LanguageConstants.String, TypePropertyFlags.None), new TypeProperty("weekOfYear", LanguageConstants.Int, TypePropertyFlags.None)}, null, TypePropertyFlags.None);
            ResourceType_instancePools = new ResourceType("Microsoft.Sql/instancePools", new ITypeProperty[]{new TypeProperty("location", LanguageConstants.String, TypePropertyFlags.Required), new TypeProperty("tags", LanguageConstants.Any, TypePropertyFlags.None), new LazyTypeProperty("sku", () => Sku, TypePropertyFlags.None), new LazyTypeProperty("properties", () => InstancePoolProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_instancePools);
            ResourceType_managedInstances_vulnerabilityAssessments = new ResourceType("Microsoft.Sql/managedInstances/vulnerabilityAssessments", new ITypeProperty[]{new LazyTypeProperty("properties", () => ManagedInstanceVulnerabilityAssessmentProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_managedInstances_vulnerabilityAssessments);
            ResourceType_servers_vulnerabilityAssessments = new ResourceType("Microsoft.Sql/servers/vulnerabilityAssessments", new ITypeProperty[]{new LazyTypeProperty("properties", () => ServerVulnerabilityAssessmentProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_servers_vulnerabilityAssessments);
            ResourceType_servers_privateEndpointConnections = new ResourceType("Microsoft.Sql/servers/privateEndpointConnections", new ITypeProperty[]{new LazyTypeProperty("properties", () => PrivateEndpointConnectionProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_servers_privateEndpointConnections);
            ResourceType_managedInstances_databases_backupLongTermRetentionPolicies = new ResourceType("Microsoft.Sql/managedInstances/databases/backupLongTermRetentionPolicies", new ITypeProperty[]{new LazyTypeProperty("properties", () => BaseLongTermRetentionPolicyProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_managedInstances_databases_backupLongTermRetentionPolicies);
            ResourceType_managedInstances_databases_schemas_tables_columns_sensitivityLabels = new ResourceType("Microsoft.Sql/managedInstances/databases/schemas/tables/columns/sensitivityLabels", new ITypeProperty[]{new LazyTypeProperty("properties", () => SensitivityLabelProperties, TypePropertyFlags.Required), new TypeProperty("name", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.Required), new TypeProperty("type", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly), new TypeProperty("apiVersion", LanguageConstants.String, TypePropertyFlags.SkipInlining | TypePropertyFlags.ReadOnly)}, null, ResourceTypeReference_managedInstances_databases_schemas_tables_columns_sensitivityLabels);
        }
        public static void Register(IResourceTypeRegistrar registrar)
        {
            registrar.RegisterType(ResourceTypeReference_instancePools, () => InstanceLazy.Value.ResourceType_instancePools);
            registrar.RegisterType(ResourceTypeReference_managedInstances_vulnerabilityAssessments, () => InstanceLazy.Value.ResourceType_managedInstances_vulnerabilityAssessments);
            registrar.RegisterType(ResourceTypeReference_servers_vulnerabilityAssessments, () => InstanceLazy.Value.ResourceType_servers_vulnerabilityAssessments);
            registrar.RegisterType(ResourceTypeReference_servers_privateEndpointConnections, () => InstanceLazy.Value.ResourceType_servers_privateEndpointConnections);
            registrar.RegisterType(ResourceTypeReference_managedInstances_databases_backupLongTermRetentionPolicies, () => InstanceLazy.Value.ResourceType_managedInstances_databases_backupLongTermRetentionPolicies);
            registrar.RegisterType(ResourceTypeReference_managedInstances_databases_schemas_tables_columns_sensitivityLabels, () => InstanceLazy.Value.ResourceType_managedInstances_databases_schemas_tables_columns_sensitivityLabels);
        }
        private readonly ResourceType ResourceType_instancePools;
        private readonly ResourceType ResourceType_managedInstances_vulnerabilityAssessments;
        private readonly ResourceType ResourceType_servers_vulnerabilityAssessments;
        private readonly ResourceType ResourceType_servers_privateEndpointConnections;
        private readonly ResourceType ResourceType_managedInstances_databases_backupLongTermRetentionPolicies;
        private readonly ResourceType ResourceType_managedInstances_databases_schemas_tables_columns_sensitivityLabels;
        private readonly TypeSymbol ManagedInstanceVulnerabilityAssessmentProperties;
        private readonly TypeSymbol VulnerabilityAssessmentRecurringScansProperties;
        private readonly TypeSymbol ServerVulnerabilityAssessmentProperties;
        private readonly TypeSymbol SensitivityLabelProperties;
        private readonly TypeSymbol Sku;
        private readonly TypeSymbol InstancePoolProperties;
        private readonly TypeSymbol PrivateEndpointConnectionProperties;
        private readonly TypeSymbol PrivateEndpointProperty;
        private readonly TypeSymbol PrivateLinkServiceConnectionStateProperty;
        private readonly TypeSymbol BaseLongTermRetentionPolicyProperties;
    }
}
